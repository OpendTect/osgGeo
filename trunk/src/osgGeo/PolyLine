#ifndef OSGGEO_POLYLINE_H
#define OSGGEO_POLYLINE_H

/* osgGeo - A collection of geoscientific extensions to OpenSceneGraph.
Copyright 2011 dGB Beheer B.V.

osgGeo is free software; you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>
*/

#include <osg/Node>
#include <osg/NodeVisitor>
#include <osgGeo/Common>
namespace osg { class Geometry; }

namespace osgGeo
{

class OSGGEO_EXPORT PolylineNode : public osg::Node
{
public:

    			PolylineNode();
			PolylineNode(const PolylineNode&,const osg::CopyOp& op =osg::CopyOp::DEEP_COPY_ALL);
			META_Node(osgGeo,PolylineNode);

    void		setVertexArray(osg::Array*);
    const osg::Array*	getVertexArray() const;
    osg::Array*		getVertexArray();

    void		setRadius(float);
    float		getRadius() const;
	void		setColor(osg::Vec4);
	osg::Vec4   getColor() const { return _color; }
    void		setMaxScreenRadius(float);
    float		getMaxScreenRadius() const;

    void		setScaleMode(bool screensize);
    bool		getScaleMode() const;

    void		traverse(osg::NodeVisitor&);
	virtual osg::BoundingSphere computeBound() const;  

protected:
    PolylineNode&	operator=(const PolylineNode&);
    virtual		~PolylineNode();

    void		createGeometry();

    osg::ref_ptr<osg::Array>	_array;
    float			_radius;
    float			_maxRadius;
    bool			_screenSizeScaling;
	osg::Vec4		_color;

    osg::ref_ptr<osg::Geometry>	_geometry;
    unsigned int		_arrayModifiedCount;
};



}
#endif //OSGGEO_POLYLINE_H
