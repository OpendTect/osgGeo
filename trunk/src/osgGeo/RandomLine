#ifndef OSGGEO_RANDOMLINE_H
#define OSGGEO_RANDOMLINE_H

/* osgGeo - A collection of geoscientific extensions to OpenSceneGraph.
Copyright 2011 dGB Beheer B.V.

osgGeo is free software; you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation; either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>

$Id: PolyLine 113 2012-10-10 12:03:27Z kristofer.tingdahl@dgbes.com $

*/

#include <osg/Node>
#include <osg/Array>
#include <osg/NodeVisitor>
#include <osgGeo/Common>


namespace osg { class Geometry; class Geode; }

namespace osgGeo
{
class LayeredTexture;

class OSGGEO_EXPORT RandomLineNode : public osg::Node
{
public:

			    RandomLineNode();
			    RandomLineNode(const RandomLineNode&,
				const osg::CopyOp& op =
				osg::CopyOp::DEEP_COPY_ALL);
			    META_Node(osgGeo,RandomLineNode);
    
    void		    setTexture(osgGeo::LayeredTexture*);
    osgGeo::LayeredTexture* getTexture()		{ return _texture; }
    
    void		    setKnots(const osg::Vec2Array& coords,
				     const osg::UIntArray& indices);
				     
    const osg::UIntArray&   getKnotIndices() const	{ return *_knotindices;}
    const osg::Vec2Array&   getKnotCoords() const	{ return *_knotcoords; }
    
    void		    setZRange(float top, float bottom );
    float		    getBottom() const		{ return _bottom; }
    float		    getTop() const		{ return _top; }
    
protected:
    virtual		~RandomLineNode();
    bool		updateGeometry();
    void		traverse(osg::NodeVisitor&);
    
    osg::ref_ptr<osgGeo::LayeredTexture>		_texture;
    osg::ref_ptr<osg::UIntArray>					_knotindices;
    osg::ref_ptr<osg::Vec2Array>					_knotcoords;
    float						_top;
    float						_bottom;
    osg::ref_ptr<osg::Geode>				_geode;
    int							_updatecount;
    int							_lastgeomupdatecount;
};



}
#endif //OSGGEO_RANDOMLINE_H

